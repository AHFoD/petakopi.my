<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
                       integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
                       crossorigin=""/>

<div id="map" style="height: 500px"></div>

<%= content_for :js do %>
  <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
          integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
          crossorigin=""></script>

  <script>
    var map = L.map('map').fitWorld()

    var tiles = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=<%= Rails.application.credentials.dig(:mapbox_api_key) %>', {
      maxZoom: 18,
      attribution: 'Map data &copy <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, ' +
        'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
      id: 'mapbox/streets-v11',
      tileSize: 512,
      zoomOffset: -1
    }).addTo(map)

    function onLocationFound(e) {
      var radius = e.accuracy / 2
      var redIcon = new L.Icon({
        iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
        iconSize: [25, 41],
        iconAnchor: [12, 41],
        popupAnchor: [1, -34],
        shadowSize: [41, 41]
      });

      var locationMarker = L.marker(e.latlng, {icon: redIcon}).addTo(map)
        .bindPopup('You are within ' + radius + ' meters from this point')

      var locationCircle = L.circle(e.latlng, radius).addTo(map)
    }

    function onLocationError(e) {
      alert(e.message)
    }

    map.on('locationfound', onLocationFound)
    map.on('locationerror', onLocationError)

    map.locate({setView: true, maxZoom: 16})

    fetch("<%= api_v1_coffee_shops_path(format: :json) %>")
      .then(response => response.json())
      .then(shops => {
          shops.map((shop, i) => {
            const popupText = `<strong><a href="${shop.url}" target="_blank">${shop.name} &rarr;</a></strong>`

            L.marker([shop.lat, shop.lng]).addTo(map).bindPopup(popupText)
          })
      })
  </script>
<% end %>


